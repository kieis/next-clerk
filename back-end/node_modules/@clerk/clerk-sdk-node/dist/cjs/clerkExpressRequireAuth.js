"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var clerkExpressRequireAuth_exports = {};
__export(clerkExpressRequireAuth_exports, {
  createClerkExpressRequireAuth: () => createClerkExpressRequireAuth
});
module.exports = __toCommonJS(clerkExpressRequireAuth_exports);
var import_authenticateRequest = require("./authenticateRequest");
const createClerkExpressRequireAuth = (createOpts) => {
  const { clerkClient, frontendApi = "", apiKey = "", secretKey = "", publishableKey = "" } = createOpts;
  return (options = {}) => {
    return async (req, res, next) => {
      const requestState = await (0, import_authenticateRequest.authenticateRequest)({
        clerkClient,
        apiKey,
        secretKey,
        frontendApi,
        publishableKey,
        req,
        options
      });
      (0, import_authenticateRequest.decorateResponseWithObservabilityHeaders)(res, requestState);
      if (requestState.isUnknown) {
        return (0, import_authenticateRequest.handleUnknownCase)(res, requestState);
      }
      if (requestState.isInterstitial) {
        const interstitial = await (0, import_authenticateRequest.loadInterstitial)({
          clerkClient,
          requestState
        });
        return (0, import_authenticateRequest.handleInterstitialCase)(res, requestState, interstitial);
      }
      if (requestState.isSignedIn) {
        req.auth = { ...requestState.toAuth(), claims: requestState.toAuth().sessionClaims };
        next();
        return;
      }
      next(new Error("Unauthenticated"));
    };
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createClerkExpressRequireAuth
});
