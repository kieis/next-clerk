"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var clerkClient_exports = {};
__export(clerkClient_exports, {
  Clerk: () => Clerk,
  ClerkExpressRequireAuth: () => ClerkExpressRequireAuth,
  ClerkExpressWithAuth: () => ClerkExpressWithAuth,
  clerkClient: () => clerkClient,
  createClerkClient: () => createClerkClient,
  setClerkApiKey: () => setClerkApiKey,
  setClerkApiVersion: () => setClerkApiVersion,
  setClerkHttpOptions: () => setClerkHttpOptions,
  setClerkServerApiUrl: () => setClerkServerApiUrl
});
module.exports = __toCommonJS(clerkClient_exports);
var import_backend = require("@clerk/backend");
var import_clerkExpressRequireAuth = require("./clerkExpressRequireAuth");
var import_clerkExpressWithAuth = require("./clerkExpressWithAuth");
var import_utils = require("./utils");
function Clerk(options) {
  const clerkClient2 = (0, import_backend.Clerk)(options);
  const expressWithAuth = (0, import_clerkExpressWithAuth.createClerkExpressWithAuth)({ ...options, clerkClient: clerkClient2 });
  const expressRequireAuth = (0, import_clerkExpressRequireAuth.createClerkExpressRequireAuth)({ ...options, clerkClient: clerkClient2 });
  const verifyToken = (token, verifyOpts) => {
    const issuer = (iss) => iss.startsWith("https://clerk.") || iss.includes(".clerk.accounts");
    return (0, import_backend.verifyToken)(token, { issuer, ...options, ...verifyOpts });
  };
  return {
    ...clerkClient2,
    expressWithAuth,
    expressRequireAuth,
    verifyToken,
    ...createBasePropForRedwoodCompatibility()
  };
}
const createBasePropForRedwoodCompatibility = () => {
  const verifySessionToken = (token) => {
    const { payload } = (0, import_backend.decodeJwt)(token);
    return (0, import_backend.verifyToken)(token, {
      issuer: payload.iss,
      jwtKey: process.env.CLERK_JWT_KEY
    });
  };
  return { base: { verifySessionToken } };
};
const createClerkClient = Clerk;
let clerkClientSingleton = {};
const clerkClient = new Proxy(clerkClientSingleton, {
  get(_target, property) {
    const hasBeenInitialised = !!clerkClientSingleton.authenticateRequest;
    if (hasBeenInitialised) {
      return clerkClientSingleton[property];
    }
    const env = { ...(0, import_utils.loadApiEnv)(), ...(0, import_utils.loadClientEnv)() };
    if (env.secretKey) {
      clerkClientSingleton = Clerk({ ...env, userAgent: "@clerk/clerk-sdk-node" });
      return clerkClientSingleton[property];
    }
    return Clerk({ ...env, userAgent: "@clerk/clerk-sdk-node" })[property];
  },
  set() {
    return false;
  }
});
const ClerkExpressRequireAuth = (...args) => {
  const env = { ...(0, import_utils.loadApiEnv)(), ...(0, import_utils.loadClientEnv)() };
  const fn = (0, import_clerkExpressRequireAuth.createClerkExpressRequireAuth)({ clerkClient, ...env });
  return fn(...args);
};
const ClerkExpressWithAuth = (...args) => {
  const env = { ...(0, import_utils.loadApiEnv)(), ...(0, import_utils.loadClientEnv)() };
  const fn = (0, import_clerkExpressWithAuth.createClerkExpressWithAuth)({ clerkClient, ...env });
  return fn(...args);
};
const setClerkApiKey = (value) => {
  clerkClient.__unstable_options.apiKey = value;
};
const setClerkServerApiUrl = (value) => {
  clerkClient.__unstable_options.apiUrl = value;
};
const setClerkApiVersion = (value) => {
  clerkClient.__unstable_options.apiVersion = value;
};
const setClerkHttpOptions = (value) => {
  clerkClient.__unstable_options.httpOptions = value;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Clerk,
  ClerkExpressRequireAuth,
  ClerkExpressWithAuth,
  clerkClient,
  createClerkClient,
  setClerkApiKey,
  setClerkApiVersion,
  setClerkHttpOptions,
  setClerkServerApiUrl
});
